proposal/ timeline: https://docs.google.com/document/d/1PwHCOXRdCH0rVnoNvRV-OCeNM10QH6NhPCaf7pC7t-Q/edit?usp=sharing

################################################################################
Suki 2/28:

Corruption detection locally and setup for Google Cloud vision api (cloud_setup.txt).

corruption code
> https://opensource.com/article/17/2/python-tricks-artists

potential future references
> https://www.geeksforgeeks.org/python-uploading-images-in-django/

################################################################################
Suki 3/15:

1) Database Schema:

Users > Albums > Images <-> Tags
                 Tag Type > Tags

User: netid, albums
Albums: album_id, name (of album), netid, images
Images: image_id, album_id, picture, tags
Tags: tag id, name (of tag, i.e. "happy"), tag type, confidence score, images
Tag_Types: name (of type, i.e. "sentiment"), tags
Image_Tags: tag_id, image_id

User - Albums (1 - many)
Albums - Images (1 - many)
Images - Tags (many - many)
    *** tags (i.e. happy 75% sentiment) can happen to multi. images
    *** multi. images have multi. tags
Tag Type - Tags (1 - many)

2) Search and sort by tags, function in api.py
